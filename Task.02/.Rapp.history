names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- data = 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL
my_matrix2(data= 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
my_matrix2 <- my_matrix(data= 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
my_matrix2 <- matrix(data= 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
R]TR]]
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !TRUE)
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
boring_function <- function(x) {x}
submit()
boring_function('My first function!')
boring_function
my_mean <- function(my_vector)
sum(my_vector)/ length(my_vector)
submit()
sum(my_vector)#
length(my_vector)#
sum(my_vector) / length(my_vector)
submit()
my_mean <- function(my_vector) {#
	sum(my_vector) / length(my_vector)#
}
submit()
my_mean <- function(my_vector) {#
	sum(my_vector)/length(my_vector)#
}
submit()
sum(my_vector)/length(my_vector)
submit()
my_mean <- function(my_vector) {}
sum(my_vector)/length(my_vector)
submit
my_mean <- function(my_vector) {#
	sum(my_vector)/length(my_vector)#
}
submit()
my_mean <- function(my_vector) {#
	sum(my_vector) / length(my_vector)#
}
submit()
my_mean <- sum(my_vector) / length(my_vector)
submit()
bye()
setwd("~/Desktop/Evolution/Programming/Task.02 ")
Data <- read.csv ("http://jonsmitchell.com/data/beren.csv", stringsAsfactors=F)
my_mean(c(4, 5, 10)_)
swirl()
submit()
my_mean(c(4, 5, 10))
remainder(5)
submit()
remainder(5)
remainder (11, 5)
remainder (divisor = 11, num = 5)
remainder( 4, div = 2)
args(remainder)
submit()
remainder(5)
remainder (11, 5)
remainder (divisor = 11, num = 5)
remainder( 4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
paste?
?paste
paste("Programming", "is","fun!")
?paste
paste("Programming", "is","fun!")
submit()
mad_libs(place = "Greece", adjustive = "pretty", noun = "people")
submit()
mad_libs(place = "Greece", adjustive = "pretty", noun = "people")
submit()
"I" %p% "love" %p% "R!"
"Hello" %p% "student"
"Hello" %p% "student!"
"I" %p% "love" %p% "R!"
"I" %p% "love" %p% "R!"
"I" %p% "love" %p% "R!"
"I"%p%"love"%p%"R!"
submit()
"I" %p% "love" %p% "R!"
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot( x= cars$speed, y= cars$dist)
plot( x= cars$dist, y= cars$speed)
plot( x= cars$speed, y = cars$dist, xlab = "Speed")
plot( x= cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot( x= cars$speed, y = cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim= c(10, 15))
plot(cars, main="My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim= c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg~ cyl, data =mtcars)
hist(mtcars$mpg)
setwd("~/Desktop/Evolution/Programming/Task.02")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3,]
Data[1:5, 1:3]
Feeds <- which(Data[,9] == "bottle")
berenMilk <- Data[Feeds,]
head(berenMilk)
Feeds <- which(Data[, "event"] == "bottle")
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
Data$age <- dateID - dateID[which(Data$event =="birth")]
head(Data)
beren2 <- Data
beren3 <- beren2[order(beren2$age),]
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
Naps <- which(beren3$event == "nap")
Naps <- which(Data$event == "nap")
setwd("~/Desktop/Evolution/Programming/Task.02")#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
Naps <- which(Data$event == "nap")
beren4 <- beren3[order(beren3$nap),]
beren3 <- Data
beren4 <- beren3[order(beren3$nap)]
setwd("~/Desktop/Evolution/Programming/Task.02")#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
Naps<- which(Data$event =="nap")
berenNaps <- Data[Naps,]
head(berenNaps)
Naps <- which(Data$event == "nap")
beren4 <- beren3[order(beren3$nap),]
head(Data)
beren3 <-Data
beren4 <- beren3[oder(beren3$nap),]
beren4 <- beren3[order(beren3$nap),]
setwd("~/Desktop/Evolution/Programming/Task.02")#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
Naps <- which(Data$event == "nap")
berenNaps <- Data[Naps,]
head(berenNaps)
Naps <- which(Data$event == "nap")
head(Data)
beren3<- Data
beren4 <- beren3[order(beren3$nap),]
Naps <- which(Data$event == "nap")#
berenNaps <- Data[Naps,]
head(berenNaps)
dim(berenNaps)
tail(berenNaps)
berenNaps$event
beren4 <- beren3[Naps,]
head(beren4)
avgNaps <- tapply (beren4$starttime[Naps], beren4$endtime[Naps])
avgNaps
varNaps <- tapply (beren4$starttime[Naps], beren4$endtime[Naps], var)
avgNaptime <- mean(beren4$value[Naps])
avgNaps <- tapply (beren4$starttime[Naps], beren4$endtime[Naps])
avgNaps
setwd("~/Desktop/Evolution/Programming/Task.02")#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
Naps <- which(Data$event == "nap")
berenNaps <- Data[Naps,]
head(berenNaps)
dim(berenNaps)
tail(berenNaps)
berenNaps$event
beren4 <- beren3[Naps,]
head(beren4)
setwd("~/Desktop/Evolution/Programming/Task.02")#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv" , stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[, "event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x)paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event =="birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
Naps <- which(Data$event == "nap")
berenNaps <- Data[Naps,]
head(berenNaps)
dim(berenNaps)
tail(berenNaps)
berenNaps$event
beren4 <- beren3[Naps,]
head(beren4)
head(beren4)
beren4$start_minute <- beren4$start_minute / 60
beren4$start_minute <- beren4$start_minute / 60
beren4$end_minute <- beren4$end_minute / 60
beren4$startnap <- beren4$start_hour + beren4$start_minute
beren4$endnap <- beren4$end_hour + beren4$end_minute
beren4$naplength <- beren4$endnap - beren4$startnap
totalNaptime<- tapply(beren3$value[Naps], beren3$age[Naps], sum)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck= -0.01)
plot(as.numeric(names(totalNaptime)), totalNaptime, type="b", pch=16, xlab="day", ylab="total nap time")
totalNaptime<- tapply(beren3$day[Naps], beren3$age[Naps], sum)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck= -0.01)
plot(as.numeric(names(totalNaptime)), totalNaptime, type="b", pch=16, xlab="day", ylab="total nap time")
plot(as.numeric(names(totalNaptime)), totalNaptime, type="b", pch=16, xlab="day", ylab="total nap time")
cor.test(beren4$age, beren4$naplength)
totalNaptime<- tapply(beren4$day[Naps], beren4$age[Naps], sum)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck= -0.01)
plot(as.numeric(names(totalNaptime)), totalNaptime, type="b", pch=16, xlab="day", ylab="total nap time")
cor.test(beren4$age, beren4$naplength)
